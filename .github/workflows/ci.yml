---
name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * 1,4"

jobs:
  modules-sanity:
    name: "Modules Sanity"
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
      - name: Set up pip and install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run sanity tests
        run: tox -e sanity -- --docker --color -v --python 3.6

  modules-integration:
    needs: modules-sanity
    name: "Modules Integration"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - docker:centos7
          - docker:default,python=3.6
    steps:
      - name: Check out codebase
        uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
      - name: Set up pip and install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run integration tests
        run: tox -e integration -- --color -v --controller docker:default --target ${{ matrix.target }}

  discover-scenarios:
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.set-scenarios.outputs.scenarios }}
    steps:
      - name: Check out codebase
        uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
      - name: Set up pip and install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Initialize tox
        run: tox -l

      - name: Discover scenarios
        id: set-scenarios
        # Convert the tox scenario listing into a JSON/YAML list, filtering out any non-molecule/lint scenarios
        run: |
          export scenarios="[`for l in $(tox -l); do echo "'$l'"; done | grep ansible | grep -v "lint" | tr '\n' ',' | sed '$s/,$//'`]"
          echo "::set-output name=scenarios::$scenarios"

  roles:
    name: "${{ matrix.role }}"
    runs-on: ubuntu-latest
    needs: discover-scenarios
    strategy:
      fail-fast: false
      matrix:
        role: ${{ fromJson(needs.discover-scenarios.outputs.scenarios) }}
    steps:
      - name: Check out codebase
        uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
      - name: Set up pip and install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Build and install collection
        run: |
          ansible-galaxy collection build --force
          ansible-galaxy collection install *.tar.gz --force

      - name: Initialize tox
        run: tox -l
      - name: Run role tests
        run: tox -e ${{ matrix.role }}
